class Solution {
    public int trap(int[] height) {
         
         Stack<Integer> st = new Stack<>();

         int n = height.length, water = 0;
         for(int i=0;i<n;i++){
            while(!st.isEmpty() && height[i] > height[st.peek()]){
                int top = st.pop();
                if(st.isEmpty()) break;
                int distance = i-st.peek()-1;
                int boundedHeight = Math.min(height[i], height[st.peek()]) - height[top];
                water += boundedHeight*distance;
            }
            st.push(i);
         }
         return water;
    }
}
